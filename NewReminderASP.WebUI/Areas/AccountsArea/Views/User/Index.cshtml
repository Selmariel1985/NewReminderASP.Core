@using System.Security.Claims
@model Tuple<IEnumerable<NewReminderASP.Domain.Entities.User>, System.Security.Claims.ClaimsPrincipal>

@{
    ViewBag.Title = "User List";
    var roles = Model.Item2.Claims.Where(c => c.Type == ClaimTypes.Role).Select(c => c.Value).ToList();
}

<link href="~/styles.css" rel="stylesheet"/>


<div class="user-container">
    <p>Username: @Model.Item2.Identity.Name</p>
    <div class="user-container__roles">
        <p>
            Roles:
            @foreach (var role in roles)
            {
                <span class="user-container__role">@role</span>
            }
        </p>
        <p>
            <strong>Current User:</strong>
            @if (Model.Item2.IsInRole("Admin"))
            {
                <p>The current user is an administrator.</p>
            }
            else
            {
                <p>The current user is not an administrator.</p>
            }
        </p>
    </div>
</div>
<br />
<div class="header-bar">
    <div class="user-info">
        <a href="@Url.Action("SignOut", "User")" class="btn btn-eco">
            <i class="fas fa-leaf"></i> Logout
        </a>
    </div>
</div>
<br />
<div class="form-container">
    <h2>User List</h2>
    <table class="table-eco">
        <tr>
            <th>ID</th>
            <th>Login</th>
            <th>Email</th>
            <th>Roles</th>
        </tr>
        @foreach (var user in Model.Item1)
        {
            <tr>
                <td>@user.Id</td>
                <td>@Html.ActionLink(user.Login, "Details", new { id = user.Id })</td>
                <td>@user.Email</td>
                <td>
                    @foreach (var role in user.UserRoles)
                    {
                        <span>@role.Role.Name</span>
                    }
                </td>
            </tr>
        }
    </table>
</div>