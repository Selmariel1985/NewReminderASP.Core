@model NewReminderASP.Domain.Entities.Event

@{
    ViewBag.Title = "Edit Event";
}



<link href="~/styles.css" rel="stylesheet"/>
<!-- jQuery library -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<!-- jQuery UI library -->
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
<link href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" rel="stylesheet">
<div class="edit-container">


    @using (Html.BeginForm())
    {
        <h2>Edit Event</h2>

        @Html.HiddenFor(model => model.UserID)

        @Html.HiddenFor(model => model.Login)


        <div class="form-group">
            @Html.LabelFor(model => model.EventTypes, new { @class = "edit-control-label" })
            @Html.DropDownListFor(model => model.EventTypes, new SelectList(Model.EventsTypes, "TypeName", "TypeName"), "Select User", new { @class = "edit-form-control", required = "required" })
            @Html.ValidationMessageFor(model => model.EventTypes, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "edit-control-label" })
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "edit-form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, new { @class = "edit-control-label" })
            @Html.TextBoxFor(model => model.Date, "{0:dd-MM-yyyy}", new { @class = "form-control datepicker", placeholder = "Select Date" })
            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Time, new { @class = "edit-control-label" })
            @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "edit-form-control" } })
            @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Recurrence, new { @class = "edit-control-label" })
            @Html.DropDownListFor(model => model.Recurrence, new SelectList(Model.EventRecurrences, "RecurrenceType", "RecurrenceType"), "Select User", new { @class = "edit-form-control", required = "required" })
            @Html.ValidationMessageFor(model => model.Recurrence, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Reminders, new { @class = "edit-control-label" })
            @Html.EditorFor(model => model.Reminders, new { htmlAttributes = new { @class = "edit-form-control" } })
            @Html.ValidationMessageFor(model => model.Reminders, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-save"/>
        </div>
    }
</div>




@if (User.IsInRole("Admin"))
{
    <div class="row mt-2">
        <div class="col-md-6">
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn-back" })
        </div>
    </div>

}
else
{
   
    
    <div class="row mt-2">
        <div class="col-md-6">
            @Html.ActionLink("Back", "Details", "Event", new { userName = User.Identity.Name, area = "EventsArea", controller = "User" }, new { @class = "btn btn-details" })
        </div>
    </div>
}


<script>
    $.noConflict();
    jQuery(document).ready(function ($) {
        $('.datepicker').datepicker({
            dateFormat: "dd-mm-yy"
        });
    });

</script>