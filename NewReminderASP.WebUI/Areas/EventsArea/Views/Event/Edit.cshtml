@model NewReminderASP.Domain.Entities.Event

@{
    ViewBag.Title = "Edit Event";
}


<link href="~/styles.css" rel="stylesheet" />
<div class="form-container">
    <h2>Edit Event</h2>

    @using (Html.BeginForm())
    {

        <h2>Edit Event</h2>

        @Html.HiddenFor(model => model.UserID)

        <div class="form-group">
            @Html.LabelFor(model => model.Login, new { @class = "control-label" })
            @Html.DropDownListFor(model => model.Login, new SelectList(Model.Users, "Login", "Login"), "Select User", new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EventTypes, new { @class = "control-label" })
            @Html.DropDownListFor(model => model.EventTypes, new SelectList(Model.EventsTypes, "TypeName", "TypeName"), "Select User", new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(model => model.EventTypes, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label" })
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, new { @class = "control-label" })
            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Time, new { @class = "control-label" })
            @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Recurrence, new { @class = "control-label" })
            @Html.DropDownListFor(model => model.Recurrence, new SelectList(Model.EventRecurrences, "RecurrenceType", "RecurrenceType"), "Select User", new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(model => model.Recurrence, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Reminders, new { @class = "control-label" })
            @Html.EditorFor(model => model.Reminders, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Reminders, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-save" />
        </div>

    }
</div>

<div class="row mt-2">
    <div class="col-md-6">
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn-back" })
    </div>
</div>