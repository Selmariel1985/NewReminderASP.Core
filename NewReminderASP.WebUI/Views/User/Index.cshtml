@using System.Security.Claims
@model Tuple<IEnumerable<NewReminderASP.Domain.Entities.User>, System.Security.Claims.ClaimsPrincipal>

@{
    ViewBag.Title = "User List";
    var roles = Model.Item2.Claims.Where(c => c.Type == ClaimTypes.Role).Select(c => c.Value).ToList();
}

<div>
    <h1>Пользователь</h1>
    <p>Имя пользователя: @Model.Item2.Identity.Name</p>
    <p>
        Роли:
        @foreach (var role in roles)
        {
            <span>@role</span>
        }
    </p>
    <p>
        <strong>Current User:</strong>
        @if (Model.Item2.IsInRole("Admin"))
        {
            <p>The current user is an administrator.</p>
        }
        else
        {
            <p>The current user is not an administrator.</p>
        }
    </p>
</div>

@Html.ActionLink("Sign Out", "SignOut", "Login", null, new { })

<h2>User List</h2>
<table>
    <tr>
        <th>ID</th>
        <th>Login</th>
        <th>Email</th>
        <th>Roles</th>
    </tr>
    @foreach (var user in Model.Item1)
    {
        <tr>
            <td>@user.Id</td>
            <td>@Html.ActionLink(user.Login, "Details", new { id = user.Id })</td>
            <td>@user.Email</td>
            <td>
                @foreach (var role in user.UserRoles)
                {
                    <span>@role.Role.Name</span>
                }
            </td>
        </tr>
    }
</table>